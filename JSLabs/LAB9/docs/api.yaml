swagger: "2.0"
info:
  title: This is documntation for my API
  description: SAPR express labs documentaion by Natur Mustafa 211-325
  version: 1.0
  servers:
    -url: "http://localhost:5005"
    description: This is my local server

paths:
  #Returns a Models list
  /v4/models:
    get:
      summary: Returns a list of models.
      description: Models witch are already registered
      responses:
        200: # status code
          description: Successul Response
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string

  #Get Request with path id
  /v4/models/{ID}:
    get:
      summary: Returns a model by ID.
      description: Returns the Specific model
      parameters:
        - name: ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
            example:
              {
                "_id": "#####################",
                "username": "#####",
                "name": "#####",
                "modelType": "#####",
                "modelObj": {},
                "desc": "#####",
                "comments": ["#####", "#####"],
                "creationDate": "#####",
                "lastChangesDate": "#####",
              }

  /v3/postModels:
    post:
      summary: Adds a new model
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: query
          name: key
          type: string
          enum: ["BIdAWH7i9n7YeC/kfM5MQ", "6485ecb24255765820b1fade"]
          required: true

        - in: body
          name: body
          schema:
            properties:
              username:
                type: string
              name:
                type: string
              modelType:
                type: string
              modelObj:
                type: object
              desc:
                type: string
              comments:
                type: [string]
      responses:
        "200":
          description: OK

  /v4/newUser:
    post:
      summary: Adds a new user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              username:
                type: string
      responses:
        "200":
          description: OK

  /v3/putModels/{ID}:
    put:
      summary: updates a model by ID
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: query
          name: key
          type: string
          enum: ["083m.7h.X_QidLLnH~6~giz"]
          required: true

        - name: ID
          in: path
          type: string
          enum: ["6471c56313e1acbca3c26158", "6471c5767e8b2f72e8b39e6a"]
          required: true

        - in: body
          name: body
          schema:
            properties:
              username:
                type: string
              name:
                type: string
              modelType:
                type: string
              modelObj:
                type: object
              desc:
                type: string
              comments:
                type: [string]
      responses:
        "200":
          description: OK

  /v3/deleteModels/{ID}:
    delete:
      summary: delets a model by ID
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: query
          name: key
          type: string
          enum: ["083m.7h.X_QidLLnH~6~giz"]
          required: true

        - name: ID
          in: path
          type: string
          enum: ["6471c62bfc19c42d331c308c", "6471c6b91212c571c7bd4411"]
          required: true
      responses:
        "200":
          description: OK
